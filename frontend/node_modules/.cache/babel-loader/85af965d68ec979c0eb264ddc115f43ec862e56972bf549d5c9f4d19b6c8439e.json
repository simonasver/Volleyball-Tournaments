{"ast":null,"code":"import axios from \"axios\";\nimport { getUserData, updateUserAccessToken } from \"../storage/auth.storage\";\nconst instance = axios.create({\n  // baseURL: \"https://goldfish-app-ibq9e.ondigitalocean.app/api\",\n  baseURL: \"http://localhost:7067/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\ninstance.interceptors.request.use(config => {\n  var _getUserData;\n  const token = (_getUserData = getUserData()) === null || _getUserData === void 0 ? void 0 : _getUserData.accessToken;\n  if (token) {\n    config.headers[\"Authorization\"] = \"Bearer \" + token;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(res => {\n  return res;\n}, async err => {\n  const originalConfig = err.config;\n  if (!(originalConfig.url === \"/tokens\" && originalConfig.method === \"put\") && err.response) {\n    if (err.response.status === 401 && !originalConfig._retry) {\n      originalConfig._retry = true;\n      try {\n        var _getUserData2;\n        const rs = await instance.put(\"/tokens\", {\n          token: (_getUserData2 = getUserData()) === null || _getUserData2 === void 0 ? void 0 : _getUserData2.refreshToken\n        });\n        const {\n          accessToken\n        } = rs.data;\n        updateUserAccessToken(accessToken);\n        return instance(originalConfig);\n      } catch (_error) {\n        return Promise.reject(_error);\n      }\n    }\n  }\n  return Promise.reject(err);\n});\nexport default instance;","map":{"version":3,"names":["axios","getUserData","updateUserAccessToken","instance","create","baseURL","headers","interceptors","request","use","config","_getUserData","token","accessToken","error","Promise","reject","response","res","err","originalConfig","url","method","status","_retry","_getUserData2","rs","put","refreshToken","data","_error"],"sources":["C:/Stuff/KTU/8 semestras/bakalauras/project/frontendreact/my-app/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getUserData, updateUserAccessToken } from \"../storage/auth.storage\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"https://goldfish-app-ibq9e.ondigitalocean.app/api\",\r\n  baseURL: \"http://localhost:7067/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = getUserData()?.accessToken;\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  async (err) => {\r\n    const originalConfig = err.config;\r\n\r\n    if (\r\n      !(originalConfig.url === \"/tokens\" && originalConfig.method === \"put\") &&\r\n      err.response\r\n    ) {\r\n      if (err.response.status === 401 && !originalConfig._retry) {\r\n        originalConfig._retry = true;\r\n\r\n        try {\r\n          const rs = await instance.put(\"/tokens\", {\r\n            token: getUserData()?.refreshToken,\r\n          });\r\n\r\n          const { accessToken } = rs.data;\r\n          updateUserAccessToken(accessToken);\r\n\r\n          return instance(originalConfig);\r\n        } catch (_error) {\r\n          return Promise.reject(_error);\r\n        }\r\n      }\r\n    }\r\n\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,qBAAqB,QAAQ,yBAAyB;AAE5E,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC5B;EACAC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EAAA,IAAAC,YAAA;EACV,MAAMC,KAAK,IAAAD,YAAA,GAAGV,WAAW,EAAE,cAAAU,YAAA,uBAAbA,YAAA,CAAeE,WAAW;EACxC,IAAID,KAAK,EAAE;IACTF,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGM,KAAK;EACrD;EACA,OAAOF,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;AAEDX,QAAQ,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC/BS,GAAG,IAAK;EACP,OAAOA,GAAG;AACZ,CAAC,EACD,MAAOC,GAAG,IAAK;EACb,MAAMC,cAAc,GAAGD,GAAG,CAACT,MAAM;EAEjC,IACE,EAAEU,cAAc,CAACC,GAAG,KAAK,SAAS,IAAID,cAAc,CAACE,MAAM,KAAK,KAAK,CAAC,IACtEH,GAAG,CAACF,QAAQ,EACZ;IACA,IAAIE,GAAG,CAACF,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAI,CAACH,cAAc,CAACI,MAAM,EAAE;MACzDJ,cAAc,CAACI,MAAM,GAAG,IAAI;MAE5B,IAAI;QAAA,IAAAC,aAAA;QACF,MAAMC,EAAE,GAAG,MAAMvB,QAAQ,CAACwB,GAAG,CAAC,SAAS,EAAE;UACvCf,KAAK,GAAAa,aAAA,GAAExB,WAAW,EAAE,cAAAwB,aAAA,uBAAbA,aAAA,CAAeG;QACxB,CAAC,CAAC;QAEF,MAAM;UAAEf;QAAY,CAAC,GAAGa,EAAE,CAACG,IAAI;QAC/B3B,qBAAqB,CAACW,WAAW,CAAC;QAElC,OAAOV,QAAQ,CAACiB,cAAc,CAAC;MACjC,CAAC,CAAC,OAAOU,MAAM,EAAE;QACf,OAAOf,OAAO,CAACC,MAAM,CAACc,MAAM,CAAC;MAC/B;IACF;EACF;EAEA,OAAOf,OAAO,CAACC,MAAM,CAACG,GAAG,CAAC;AAC5B,CAAC,CACF;AAED,eAAehB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}