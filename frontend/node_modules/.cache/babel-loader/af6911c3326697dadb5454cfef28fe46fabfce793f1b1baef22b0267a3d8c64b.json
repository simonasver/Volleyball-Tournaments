{"ast":null,"code":"import { refresh } from \"../services/auth.service\";\nimport { authActions } from \"../store/auth-slice\";\nexport const getUserData = () => {\n  const userData = localStorage.getItem(\"user\");\n  if (userData) {\n    return JSON.parse(userData);\n  }\n  return null;\n};\nexport const refreshUserData = async (refreshToken, dispatch) => {\n  const newAccessToken = await refresh(refreshToken);\n  if (newAccessToken) {\n    setUserData(dispatch, newAccessToken, refreshToken);\n  } else {\n    setUserData(dispatch, undefined, undefined, undefined);\n  }\n};\nexport const setUserData = (dispatch, accessToken, refreshToken, userData) => {\n  if (!accessToken && !refreshToken) {\n    localStorage.removeItem(\"user\");\n    dispatch(authActions.changeUser({\n      user: null\n    }));\n    return;\n  }\n  let newUserData;\n  if (!userData) {\n    newUserData = getUserData();\n  } else {\n    newUserData = userData;\n  }\n  const user = {\n    ...newUserData,\n    accessToken: accessToken,\n    refreshToken: refreshToken\n  };\n  localStorage.setItem(\"user\", JSON.stringify(user));\n  dispatch(authActions.changeUser({\n    user: user\n  }));\n};\nexport const updateUserAccessToken = accessToken => {\n  var _localStorage$getItem;\n  const user = JSON.parse((_localStorage$getItem = localStorage.getItem(\"user\")) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"\");\n  user.accessToken = accessToken;\n  localStorage.setItem(\"user\", JSON.stringify(user));\n};","map":{"version":3,"names":["refresh","authActions","getUserData","userData","localStorage","getItem","JSON","parse","refreshUserData","refreshToken","dispatch","newAccessToken","setUserData","undefined","accessToken","removeItem","changeUser","user","newUserData","setItem","stringify","updateUserAccessToken","_localStorage$getItem"],"sources":["C:/Stuff/KTU/8 semestras/bakalauras/project/frontendreact/my-app/src/storage/auth.storage.ts"],"sourcesContent":["import { refresh } from \"../services/auth.service\";\r\nimport { AppDispatch } from \"../store\";\r\nimport { authActions } from \"../store/auth-slice\";\r\n\r\ninterface IUser {\r\n  userName: string;\r\n  email: string;\r\n  roles: string[];\r\n}\r\n\r\nexport const getUserData = () => {\r\n  const userData = localStorage.getItem(\"user\");\r\n  if (userData) {\r\n    return JSON.parse(userData);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const refreshUserData = async (refreshToken: string, dispatch: AppDispatch) => {\r\n  const newAccessToken = await refresh(refreshToken);\r\n  if (newAccessToken) {\r\n    setUserData(dispatch, newAccessToken, refreshToken);\r\n  } else {\r\n    setUserData(dispatch, undefined, undefined, undefined);\r\n  }\r\n};\r\n\r\nexport const setUserData = (dispatch: AppDispatch, accessToken?: string, refreshToken?: string, userData?: IUser) => {\r\n  if (!accessToken && !refreshToken) {\r\n    localStorage.removeItem(\"user\");\r\n    dispatch(\r\n      authActions.changeUser({\r\n        user: null,\r\n      })\r\n    );\r\n    return;\r\n  }\r\n  let newUserData;\r\n  if(!userData){\r\n    newUserData = getUserData();\r\n  } else {\r\n    newUserData = userData;\r\n  }\r\n  const user = {\r\n    ...newUserData,\r\n    accessToken: accessToken,\r\n    refreshToken: refreshToken,\r\n  };\r\n  localStorage.setItem(\"user\", JSON.stringify(user));\r\n  dispatch(\r\n    authActions.changeUser({\r\n      user: user,\r\n    })\r\n  );\r\n};\r\n\r\nexport const updateUserAccessToken = (accessToken: string) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\") ?? \"\");\r\n  user.accessToken = accessToken;\r\n  localStorage.setItem(\"user\", JSON.stringify(user));\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,0BAA0B;AAElD,SAASC,WAAW,QAAQ,qBAAqB;AAQjD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC7C,IAAIF,QAAQ,EAAE;IACZ,OAAOG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;EAC7B;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,MAAAA,CAAOC,YAAoB,EAAEC,QAAqB,KAAK;EACpF,MAAMC,cAAc,GAAG,MAAMX,OAAO,CAACS,YAAY,CAAC;EAClD,IAAIE,cAAc,EAAE;IAClBC,WAAW,CAACF,QAAQ,EAAEC,cAAc,EAAEF,YAAY,CAAC;EACrD,CAAC,MAAM;IACLG,WAAW,CAACF,QAAQ,EAAEG,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC;EACxD;AACF,CAAC;AAED,OAAO,MAAMD,WAAW,GAAGA,CAACF,QAAqB,EAAEI,WAAoB,EAAEL,YAAqB,EAAEN,QAAgB,KAAK;EACnH,IAAI,CAACW,WAAW,IAAI,CAACL,YAAY,EAAE;IACjCL,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;IAC/BL,QAAQ,CACNT,WAAW,CAACe,UAAU,CAAC;MACrBC,IAAI,EAAE;IACR,CAAC,CAAC,CACH;IACD;EACF;EACA,IAAIC,WAAW;EACf,IAAG,CAACf,QAAQ,EAAC;IACXe,WAAW,GAAGhB,WAAW,EAAE;EAC7B,CAAC,MAAM;IACLgB,WAAW,GAAGf,QAAQ;EACxB;EACA,MAAMc,IAAI,GAAG;IACX,GAAGC,WAAW;IACdJ,WAAW,EAAEA,WAAW;IACxBL,YAAY,EAAEA;EAChB,CAAC;EACDL,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACH,IAAI,CAAC,CAAC;EAClDP,QAAQ,CACNT,WAAW,CAACe,UAAU,CAAC;IACrBC,IAAI,EAAEA;EACR,CAAC,CAAC,CACH;AACH,CAAC;AAED,OAAO,MAAMI,qBAAqB,GAAIP,WAAmB,IAAK;EAAA,IAAAQ,qBAAA;EAC5D,MAAML,IAAI,GAAGX,IAAI,CAACC,KAAK,EAAAe,qBAAA,GAAClB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,cAAAiB,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;EAC3DL,IAAI,CAACH,WAAW,GAAGA,WAAW;EAC9BV,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACH,IAAI,CAAC,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}